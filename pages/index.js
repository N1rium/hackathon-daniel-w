import { useEffect, useState } from 'react';
import Head from 'next/head';
import Image from 'next/image';
import styles from '../styles/Home.module.css';

export default function Home() {
  const [leaderboard, setLeaderboard] = useState([]);
  const [team1, setTeam1] = useState('');
  const [team2, setTeam2] = useState('');

  const [challengeId, setChallengeId] = useState(null);

  const [team1result, setTeam1result] = useState(0);
  const [team2result, setTeam2result] = useState(0);

  const getLeaderboard = async () => {
    const resp = await fetch('https://edge.gnog.dev.gloot.com/team/api/v1/challenge');
    const data = await resp.json();
    setLeaderboard(data);
  };

  const challenge = async () => {
    const resp = await fetch(
      `https://edge.gnog.dev.gloot.com/team/api/v1/challenge/byName?team1=${team1}&team2=${team2}`
    );
    const data = await resp.text();
    setChallengeId(data);
  };

  const reportScore = async () => {
    const resp = await fetch(
      `https://edge.gnog.dev.gloot.com/team/api/v1/challenge/${challengeId}/result?result1=${team1result}&result2=${team2result}`
    );
    getLeaderboard();
  };

  useEffect(() => {
    getLeaderboard();
  }, []);

  const autoSet = (value) => {
    if (!team1.length) setTeam1(value);
    else if (!team2.length) setTeam2(value);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Hackathon</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className={`${styles['leaderboard-row']} bold`}>
        <div>Team Name</div>
        <div>Ranking</div>
        <div>Delta</div>
      </div>
      {leaderboard.map((row, i) => (
        <div key={i} className={styles['leaderboard-row']}>
          <div onClick={() => autoSet(row.name)}>{row.name}</div>
          <div>{row.elo.toFixed(2)}</div>
          <div className={row.lastEloDelta.toFixed(2) < 0 ? 'red' : 'green positive'}>
            {row.lastEloDelta.toFixed(2)}
          </div>
        </div>
      ))}

      <div>
        <input type="text" value={team1} onChange={(e) => setTeam1(e.target.value)} />
        <input type="text" value={team2} onChange={(e) => setTeam2(e.target.value)} />
        <button onClick={challenge}>Challenge</button>
      </div>

      {challengeId && (
        <div>
          <input type="number" value={team1result} onChange={(e) => setTeam1result(e.target.value)} />
          <input type="number" value={team2result} onChange={(e) => setTeam2result(e.target.value)} />
          <button onClick={reportScore}>Report Score</button>
        </div>
      )}
    </div>
  );
}
